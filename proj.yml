GENERATOR:
  PackageName: cproj
  PackageDescription: "Package cproj provides Go bindings for PROJ - a library for performing conversions\nbetween cartographic projections, maintained by the OSGeo organization.\nSee https://proj.org for information.\nThese bindings are generated by \"c-for-go\" (see https://c.for-go.com)."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  FlagGroups:
    - {name: LDFLAGS, flags: [-lproj]}
  Includes: ["proj.h"]
  Options:
    SafeStrings: true
PARSER:
  IncludePaths: ["/usr/lib/gcc/x86_64-redhat-linux/8/include", "/usr/local/include", "/usr/include"]
  SourcesPaths: ["proj.h"]
TRANSLATOR:
  ConstRules:
    defines: eval
    enum: eval
  Rules:
    type:
      - {action: accept, from: "^PROJ_"}
      - {action: accept, from: "^PJ$"}
      - {action: accept, from: "^PJ_AREA$"}
      - {action: accept, from: "^PJ_CATEGORY$"}
      - {action: accept, from: "^PJ_COMPARISON_CRITERION$"}
      - {action: accept, from: "^PJ_CONTEXT$"}
      - {action: accept, from: "^PJ_COORD$"}
      - {action: accept, from: "^PJ_COORDINATE_SYSTEM_TYPE$"}
      - {action: accept, from: "^PJ_ELLPS$"}
      - {action: accept, from: "^PJ_FACTORS$"}
      - {action: accept, from: "^PJ_GRID_INFO$"}
      - {action: accept, from: "^PJ_GUESSED_WKT_DIALECT$"}
      - {action: accept, from: "^PJ_INFO$"}
      - {action: accept, from: "^PJ_INIT_INFO$"}
      - {action: accept, from: "^PJ_LOG_LEVEL$"}
      - {action: accept, from: "^PJ_OBJ_LIST$"}
      - {action: accept, from: "^PJ_OPERATIONS$"}
      - {action: accept, from: "^PJ_OPERATION_FACTORY_CONTEXT$"}
      - {action: accept, from: "^PJ_PRIME_MERIDIANS$"}
      - {action: accept, from: "^PJ_PROJ_INFO$"}
      - {action: accept, from: "^PJ_PROJ_STRING_TYPE$"}
      - {action: accept, from: "^PJ_TYPE$"}
      - {action: accept, from: "^PJ_UNITS$"}
      - {action: accept, from: "^PJ_WKT_TYPE$"}
    function:
      - {transform: lower}
      - {action: accept, from: "^proj_"}
      - {action: replace, from: "^proj_"}
      - {action: ignore, from: "^proj_context_set_file_finder$"}
      - {action: ignore, from: "^proj_context_set_search_paths$"}
      - {action: ignore, from: "^proj_create_from_wkt$"}
      - {action: ignore, from: "^proj_log_func$"}
      - {action: ignore, from: "^proj_string_list_destroy$"}
      - {transform: export}
  PtrTips:
    function:
      - {target: "^proj_context_destroy$", tips: [sref]}
      - {target: "^proj_context_get_database_path$", tips: [sref]}
      - {target: "^proj_context_set_database_path$", tips: [sref, arr, 0, 0]}
      - {target: "^proj_create$", tips: [sref, 0]}
      - {target: "^proj_create_crs_to_crs$", tips: [sref, 0, 0, sref]}
      - {target: "^proj_destroy$", tips: [sref]}
      - {target: "^proj_normalize_for_visualization$", tips: [sref, sref]}
      - {target: "^proj_trans$", tips: [sref, 0, 0]}
  MemTips:
    - {target: "^PJ_OPERATIONS$", self: raw}
    - {target: "^PJ_INFO$", self: raw}
