// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Wed, 11 Dec 2019 19:04:51 UTC.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package cproj

/*
#cgo LDFLAGS: -lproj
#include "proj.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// Context_create function as declared in include/proj.h:344
func Context_create() *PJ_CONTEXT {
	__ret := C.proj_context_create()
	__v := *(**PJ_CONTEXT)(unsafe.Pointer(&__ret))
	return __v
}

// Context_destroy function as declared in include/proj.h:345
func Context_destroy(ctx *PJ_CONTEXT) *PJ_CONTEXT {
	cctx, _ := (*C.PJ_CONTEXT)(unsafe.Pointer(ctx)), cgoAllocsUnknown
	__ret := C.proj_context_destroy(cctx)
	__v := *(**PJ_CONTEXT)(unsafe.Pointer(&__ret))
	return __v
}

// Create_crs_to_crs function as declared in include/proj.h:359
func Create_crs_to_crs(ctx *PJ_CONTEXT, source_crs string, target_crs string, area *PJ_AREA) *PJ {
	cctx, _ := (*C.PJ_CONTEXT)(unsafe.Pointer(ctx)), cgoAllocsUnknown
	source_crs = safeString(source_crs)
	csource_crs, _ := unpackPCharString(source_crs)
	target_crs = safeString(target_crs)
	ctarget_crs, _ := unpackPCharString(target_crs)
	carea, _ := (*C.PJ_AREA)(unsafe.Pointer(area)), cgoAllocsUnknown
	__ret := C.proj_create_crs_to_crs(cctx, csource_crs, ctarget_crs, carea)
	runtime.KeepAlive(target_crs)
	runtime.KeepAlive(source_crs)
	__v := *(**PJ)(unsafe.Pointer(&__ret))
	return __v
}

// Normalize_for_visualization function as declared in include/proj.h:365
func Normalize_for_visualization(ctx *PJ_CONTEXT, obj *PJ) *PJ {
	cctx, _ := (*C.PJ_CONTEXT)(unsafe.Pointer(ctx)), cgoAllocsUnknown
	cobj, _ := (*C.PJ)(unsafe.Pointer(obj)), cgoAllocsUnknown
	__ret := C.proj_normalize_for_visualization(cctx, cobj)
	__v := *(**PJ)(unsafe.Pointer(&__ret))
	return __v
}

// Destroy function as declared in include/proj.h:366
func Destroy(P *PJ) *PJ {
	cP, _ := (*C.PJ)(unsafe.Pointer(P)), cgoAllocsUnknown
	__ret := C.proj_destroy(cP)
	__v := *(**PJ)(unsafe.Pointer(&__ret))
	return __v
}

// Trans function as declared in include/proj.h:390
func Trans(P *PJ, direction PJ_DIRECTION, coord PJ_COORD) PJ_COORD {
	cP, _ := (*C.PJ)(unsafe.Pointer(P)), cgoAllocsUnknown
	cdirection, _ := (C.PJ_DIRECTION)(direction), cgoAllocsUnknown
	ccoord, _ := *(*C.PJ_COORD)(unsafe.Pointer(&coord)), cgoAllocsUnknown
	__ret := C.proj_trans(cP, cdirection, ccoord)
	__v := *(*PJ_COORD)(unsafe.Pointer(&__ret))
	return __v
}
